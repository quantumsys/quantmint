syntax = "proto3";
package ethermint.v1;

import "third_party/proto/gogoproto/gogo.proto";
import "third_party/proto/cosmos-sdk/x/auth/types/types.proto";

option go_package = "github.com/quantumsys/quantmint/types";


// EthAccount implements the auth.Account interface and embeds an
// auth.BaseAccount type. It is compatible with the auth.AccountKeeper.
message EthAccount {
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = false;

  cosmos_sdk.x.auth.v1.BaseAccount base_account = 1 [
    (gogoproto.embed) = true,
    (gogoproto.moretags) = "yaml:\"base_account\""
  ];
  bytes code_hash = 2 [
    (gogoproto.moretags) = "yaml:\"code_hash\""
  ];
  string name = 3 [
    (gogoproto.moretags) = "yaml:\"name\""
  ];
  map<string, bytes> sub_addresses = 4 [
    (gogoproto.moretags) = "yaml:\"sub_addresses\"",
    (gogoproto.castvalue) = "github.com/cosmos/cosmos-sdk/types.AccAddress"
  ];
}

message SubAccount {
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = false;

  cosmos_sdk.x.auth.v1.BaseAccount base_account = 1 [
    (gogoproto.embed) = true,
    (gogoproto.moretags) = "yaml:\"base_account\""
  ];
  bytes main_address = 2 [
    (gogoproto.moretags) = "yaml:\"main_address\"",
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"
  ];
  repeated int32 perms = 3 [
    (gogoproto.moretags) = "yaml:\"perms\"",
    (gogoproto.casttype) = "github.com/quantumsys/quantmint/types.PermValue"
  ];
}